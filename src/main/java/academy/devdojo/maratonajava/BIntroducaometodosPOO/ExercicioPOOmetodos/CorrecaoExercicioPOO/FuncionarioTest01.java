package academy.devdojo.maratonajava.BIntroducaometodosPOO.ExercicioPOOmetodos.CorrecaoExercicioPOO;


// üì¶ CLASSE FuncionarioTest01
// üëâ Classe de teste ‚Üí serve apenas para rodar e verificar se a l√≥gica do Funcionario funciona corretamente
// Em POO, muitas vezes chamamos isso de classe de "test" ou "driver"

public class FuncionarioTest01 {
    public static void main(String[] args) {
        // üõ†Ô∏è CRIA√á√ÉO DA INST√ÇNCIA
        // Aqui criamos um objeto real do tipo Funcionario, chamado "funcionario"
    Funcionario funcionario = new Funcionario();

        // üè∑Ô∏è ATRIBUI√á√ÉO DE VALORES
        // Preenchendo os atributos com dados fict√≠cios (simulando um caso real)
    funcionario.nome = "sanji";
    funcionario.idade = 23;
    funcionario.salarios =  new double[]{1500, 987.65, 3000};

        // ‚öôÔ∏è CHAMADA DO M√âTODO imprimir()
        // Isso vai rodar o m√©todo imprimir do Funcionario, que:
        // 1Ô∏è‚É£ imprime nome e idade
        // 2Ô∏è‚É£ imprime cada sal√°rio
        // 3Ô∏è‚É£ calcula e imprime a m√©dia salarial
    funcionario.imprimir();
    }
}

// üó∫Ô∏è MAPA COMPLETO DO FLUXO
// ‚úÖ Quem cria quem:
// - Aqui criamos um objeto funcionario do tipo Funcionario.
// - Esse objeto √© uma inst√¢ncia da classe Funcionario.
//
// ‚úÖ Quem chama quem:
// - main() ‚Üí cria funcionario ‚Üí chama funcionario.imprimir().
// - imprimir() dentro do Funcionario ‚Üí chama mediaSalario() internamente.
//
// ‚úÖ Como os dados fluem:
// - Preenchemos os atributos (nome, idade, salarios) diretamente no objeto funcionario.
// - Ao chamar imprimir(), ele mostra os dados e calcula a m√©dia.
//
// ‚úÖ POO envolvido:
// - Inst√¢ncia ‚Üí o objeto funcionario criado.
// - Encapsulamento (n√£o ideal aqui porque os atributos s√£o public).
// - M√©todo ‚Üí chamamos um m√©todo da inst√¢ncia (imprimir()), que por sua vez chama outro m√©todo (mediaSalario()).
// - Array ‚Üí usado para armazenar m√∫ltiplos sal√°rios no atributo salarios.
//
// ‚úÖ Analogia pr√°tica:
// Pense no FuncionarioTest01 como o programador testando uma ficha de funcion√°rio: ele cria, preenche e pede para a ficha se exibir e fazer contas sobre si mesma.
